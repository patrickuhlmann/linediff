name: Main

on:
  push:
    branches:
  pull_request:
    branches:
  schedule:
    - cron: '21 18 1 * *'

jobs:
  analyze:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
      
  build_and_test:
    name: "Build and Test"
    needs: analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build nativeImage sonarqube --info

      - name: Archive jars
        uses: actions/upload-artifact@v2
        with:
          name: jars
          path: build/libs
          
      - name: Archive reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: build/reports
          
  graal_vm_images:
    runs-on: ${{ matrix.os }}
    needs: build_and_test
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        gu-binary: [gu, gu.cmd]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: windows-latest
            gu-binary: gu
    
    steps:
      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm-version: '21.0.0.java11'

      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image
          
      - name: Build Native Image
        run: native-image ch.uhlme.Application linediff
        
      - name: Archive native image
        uses: actions/upload-artifact@v2
        with:
          name: linediff-${{ matrix.os }}
          path: linediff
